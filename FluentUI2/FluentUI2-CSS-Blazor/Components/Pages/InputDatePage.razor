@page "/inputDate"
<h1>InputText</h1>

<div class="fluent-badge">
    <label>
        Input Label
        <InputDate @bind-Value="@dateTime" />
    </label>
</div>
<h2>STORIES</h2>

<h3>Default</h3>
<div class="fluent-badge">
    <label>
        Input Label
        <InputDate @bind-Value="@dateTime" />
    </label>
</div>

<h3>Without Label</h3>
<div class="fluent-badge">
    <InputDate style=" max-width: 400px;" @bind-Value="@dateTime" />
</div>

<h3>Disabled</h3>
<div class="fluent-badge">
    <label>
        Disabled Input
        <InputDate disabled @bind-Value="@dateTime" />
    </label>
</div>



<h3>Read Only</h3>
<div class="fluent-badge">
    <label>
        Read-only value
        <InputDate readonly @bind-Value="@dateTime"  />
    </label>
</div>
<h3>Invalied (Blazor like)</h3>
<div class="fluent-badge">
    <label>
        In Blazor the class .invalid will add to the input html element
        <InputDate class="invalid" @bind-Value="@dateTime" />
    </label>
</div>
<h3>Inline</h3>
<div class="fluent-badge">
 
        The quick brown
    <InputDate style="display:inline-flex"  @bind-Value="@dateTimeLine1" placeholder="noun" />
        jumped over the
    <InputDate style="display:inline-flex" @bind-Value="@dateTimeLine1" placeholder="adjective" />
        dog.
        
    
   
</div>
@code {
    DateTime dateTime = DateTime.Now;
    DateTime dateTimeLine1;
    DateTime dateTimeLine2;
    DateTime? dateTimePlaceholder = null;

    TimeOnly? timeOnly = new TimeOnly(12,10);
    TimeOnly timeOnlyLine1;
    TimeOnly timeOnlyLine2;
    TimeOnly? timeOnlyPlaceholder = null;

    DateTimeOffset dto = new DateTimeOffset(DateTime.Now);
}
