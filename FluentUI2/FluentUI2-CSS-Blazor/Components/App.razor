@inject NavigationManager nm;
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
  
    <link rel="stylesheet" href="@Assets["app.css"]" />
    <link rel="stylesheet" href="@Assets["FluentUI2-CSS-Blazor.styles.css"]" />
    <link rel="stylesheet" href="@Assets["css/FluentUI2.css"]" />
    <ImportMap />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="PageRenderMode" />
</head>

<body>
    
    <Routes @rendermode="PageRenderMode" />
    <script src="_framework/blazor.web.js"></script>
    <script type="module" src="js/setcolor.js"></script>
</body>

</html>

@code {


    // private static IComponentRenderMode pageRenderMode => null;//"InteractiveServer";
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    // [CascadingParameter]
    // public GlobalRenderMode globalRenderMode { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        //GlobalRenderMode.DataChanged -= GlobalRenderMode_DataChanged;
       // GlobalRenderMode.DataChanged += GlobalRenderMode_DataChanged;
        //  globalRenderMode.DataChanged+=GlobalRenderMode_DataChanged; 
    }
    private IComponentRenderMode? PageRenderMode => GlobalRenderMode.IsInteractive? InteractiveServer : null;


    private void GlobalRenderMode_DataChanged(object sender, bool interactive)
    {
        try{
            nm.Refresh();
            // InvokeAsync(StateHasChanged);
        }
        catch(Exception)
        {
            
        }
    }
}